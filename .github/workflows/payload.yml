name: k230-kernel-payload

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"

env:
  xuantie_toolchain: https://occ-oss-prod.oss-cn-hangzhou.aliyuncs.com/resource//1705395627867
  toolchain_file_name: Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.8.1-20240115.tar.gz
  mainline_toolchain: https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2024.03.01
  mainline_toolchain_file_name: riscv64-glibc-ubuntu-22.04-gcc-nightly-2024.03.01-nightly.tar.gz
  rv64ilp32_toolchain: https://github.com/ruyisdk/riscv-gnu-toolchain-rv64ilp32/releases/download/2024.03.08
  rv64ilp32_toolchain_file_name: riscv64ilp32-elf-ubuntu-22.04-gcc-nightly-2024.03.08-nightly.tar.gz
  wget_alias: 'wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0'
  ARCH: riscv
  CROSS_COMPILE: riscv64-unknown-linux-gnu-

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: k230-v6.6-rv64
            abi: rv64
            gcc: gcc-13
            branch: k230-6.6-ilp32
            triple: riscv64-unknown-linux-gnu-

          - name: k230-v6.6-rv64ilp32
            abi: rv64ilp32
            gcc: rv64ilp32
            branch: k230-6.6-ilp32
            triple: riscv64-unknown-elf-

    env:
      CROSS_COMPILE: ${{ matrix.triple }}

    steps:
      - name: Install software
        run: |
              sudo apt update && \
              sudo apt install -y gdisk dosfstools g++-12-riscv64-linux-gnu cpp-12-riscv64-linux-gnu build-essential \
                                  libncurses-dev gawk flex bison openssl libssl-dev tree \
                                  dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf device-tree-compiler

      - name: Checkout opensbi
        uses: actions/checkout@v4
        with:
          path: opensbi

      - name: Checkout k230 kernel
        uses: actions/checkout@v4
        with:
          repository: ruyisdk/k230-rv64ilp32-linux-kernel
          ref: ${{ matrix.branch }}
          path: linux

      - name: Download toolchain
        run: |
              mkdir output
              if [[ ${{ matrix.gcc }} = "thead-gcc" ]]; then
                ${wget_alias} ${xuantie_toolchain}/${toolchain_file_name}
                tar -xvf ${toolchain_file_name} -C /opt
              elif [[ ${{ matrix.gcc }} = "rv64ilp32" ]]; then
                ${wget_alias} ${rv64ilp32_toolchain}/${rv64ilp32_toolchain_file_name}
                tar -xvf ${rv64ilp32_toolchain_file_name} -C /opt
              else
                ${wget_alias} ${mainline_toolchain}/${mainline_toolchain_file_name}
                tar -xvf ${mainline_toolchain_file_name} -C /opt
              fi
              export PATH="/opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.8.1/bin:$PATH"
              export PATH="/opt/riscv/bin:$PATH"
              echo "PATH=${PATH}" >> $GITHUB_ENV
              ${CROSS_COMPILE}gcc -v

      - name: Compile linux kernel
        run: |
              pushd linux
                if [[ ${{ matrix.abi }} = "rv64ilp32" ]]; then
                  make ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE} k230_evb_linux_enable_vector_defconfig 64ilp32.config
                else
                  make ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE} k230_evb_linux_enable_vector_defconfig
                fi

                make ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE} -j$(nproc) dtbs
                make ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE} -j$(nproc)

                cp -v vmlinux ../output/vmlinux_${{ matrix.abi }}
                cp -v arch/riscv/boot/Image ../output/Image_${{ matrix.abi }}
                cp -v Documentation/admin-guide/kdump/gdbmacros.txt ../output/gdbmacros_${{ matrix.abi }}.txt
                cp -v arch/riscv/boot/dts/canaan/k230_evb.dtb ../output/k230_evb_${{ matrix.abi }}.dtb
                cp -v arch/riscv/boot/dts/canaan/k230_canmv.dtb ../output/k230_canmv_${{ matrix.abi }}.dtb
              popd
              tree ${GITHUB_WORKSPACE}/output

      - name: Compile payload
        run: |
              pushd opensbi
                make PLATFORM=generic FW_PAYLOAD=y \
                  FW_FDT_PATH=../output/k230_evb_${{ matrix.abi }}.dtb \
                  FW_PAYLOAD_PATH=../output/Image_${{ matrix.abi }} \
                  FW_TEXT_START=0x0 \
                  -j $(nproc)
                cp -v build/platform/generic/firmware/fw_payload.bin ../output/k230_evb_${{ matrix.abi }}.bin
                make clean
                make PLATFORM=generic FW_PAYLOAD=y \
                  FW_FDT_PATH=../output/k230_canmv_${{ matrix.abi }}.dtb \
                  FW_PAYLOAD_PATH=../output/Image_${{ matrix.abi }} \
                  FW_TEXT_START=0x0 \
                  -j $(nproc)
                cp -v build/platform/generic/firmware/fw_payload.bin ../output/k230_canmv_${{ matrix.abi }}.bin
              popd
              tree ${GITHUB_WORKSPACE}/output

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: k230-payload-${{ matrix.name }}-${{ matrix.abi }}
          path: output/*
          retention-days: 30
